import { NextApiRequest, NextApiResponse } from 'next';
import { NextRequest, NextResponse } from 'next/server';

declare type AuthCredentialsObject = {
    name: string;
    password: string;
};
declare type AuthCredentials = AuthCredentialsObject[];

type MiddlewareOptions = {
  pathname?: string
  users?: AuthCredentials
}

/**
 * Creates a default Next middleware function that returns `NextResponse.next()` if the basic auth passes
 * @param req Next middleware request
 * @param options Options object based on MiddlewareOptions
 * @returns Either a 401 error or goes to the next page
 */
declare const createNextAuthMiddleware: ({ pathname, users }?: MiddlewareOptions) => (req: NextRequest) => NextResponse;
declare const nextBasicAuthMiddleware: ({ pathname, users }: MiddlewareOptions | undefined, req: NextRequest) => NextResponse;
/**
 * Create an API page that handles returning a 401 authentication failed message
 * @param realm The protection space
 * @param message Message you want to show to the users
 * @returns Next API page
 */
declare const createApiPage: (realm?: string, message?: string) => (_: NextApiRequest, res: NextApiResponse) => void;

export { MiddlewareOptions, createApiPage, createNextAuthMiddleware, nextBasicAuthMiddleware };
